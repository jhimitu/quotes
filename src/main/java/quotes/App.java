/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonParser;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.Buffer;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileSystems;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;

import static java.nio.file.Files.newBufferedReader;

public class App {


    public static void main(String[] args) throws IOException {

        try {
//            System.out.println(getQuotesFromAPI());
            StarWarsQuote quote = getQuotesFromAPI();
            Path path = FileSystems.getDefault().getPath("assets", "recentquotes.json");
            cacheQuote(quote, path);
        } catch (IOException err) {
            Path path = FileSystems.getDefault().getPath("assets", "recentquotes.json");

            String jsonStrings = getQuotesData(path);
            Quote[] myQuotes = quotify(jsonStrings);

            System.out.println(myQuotes[((int)(Math.random() * myQuotes.length + 1))]);
        }
    }

    public static Quote[] quotify(String quoteJSONString){

        Gson gson = new GsonBuilder().serializeNulls().create();
        Quote[] quotesFromJson = gson.fromJson(quoteJSONString, Quote[].class );


        return quotesFromJson;
    }


    public static String getQuotesData(Path path) throws IOException {

        BufferedReader reader = newBufferedReader(path, StandardCharsets.UTF_8);
        String output = "";
        StringBuilder stringBuilder = new StringBuilder();

        while((output = reader.readLine()) != null){
            stringBuilder.append(output);
        }

        return stringBuilder.toString();
    }

    public static StarWarsQuote getQuotesFromAPI() throws IOException {
        URL urlForAPI = new URL("http://swquotesapi.digitaljedi.dk/api/SWQuote/RandomStarWarsQuote");
        HttpURLConnection connection = (HttpURLConnection) urlForAPI.openConnection();
        BufferedReader reader = new BufferedReader(new InputStreamReader((connection.getInputStream())));
        StringBuilder output = new StringBuilder();
        String string = "";

        while ((string = reader.readLine()) != null) {
            output.append(string);
        }

        Gson gson = new GsonBuilder().serializeNulls().create();
        StarWarsQuote starWarsQuote = gson.fromJson(output.toString(), StarWarsQuote.class);

        return starWarsQuote;
    }

    public static void cacheQuote(StarWarsQuote quoteToAdd, Path path) throws IOException {
        //TODO: append quotes to json file

        // convert qoute object to JSON
        Gson gson = new Gson();
        String quoteJSON = gson.toJson(quoteToAdd);
        // read the file and create a JSONarray
        JsonParser parser = new JsonParser();
        JsonArray jsonQuoteArray = (JsonArray) parser.parse(new FileReader(path.toString()));
        // push object to JSONarray
        jsonQuoteArray.add(quoteJSON);
        // write back to the file
        System.out.println("ta-da: " + jsonQuoteArray);
        try {
            FileWriter writer = new FileWriter(path.toString());
            writer.write(jsonQuoteArray.);
            writer.flush();
            writer.close();
        } catch (Exception e) {
            System.out.println("Error saving quote");
        }
    }
}
